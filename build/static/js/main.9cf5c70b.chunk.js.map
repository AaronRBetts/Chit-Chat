{"version":3,"sources":["Events.js","Factories.js","components/LoginForm.js","components/sidebar/SideBarOption.js","components/sidebar/SideBar.js","components/chats/ChatHeading.js","components/messages/Messages.js","components/messages/MessageInput.js","components/chats/ChatContainer.js","components/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","COMMUNITY_CHAT","USER_CONNECTED","MESSAGE_RECEIVED","MESSAGE_SENT","USER_DISCONNECTED","TYPING","VERIFY_USER","LOGOUT","PRIVATE_MESSAGE","uuidv4","require","v4","createChatNameFromUsers","users","excludedUser","filter","u","join","getTime","date","getHours","getMinutes","slice","createMessage","message","sender","id","time","Date","now","createChat","messages","name","isCommunity","typingUsers","createUser","socketId","LoginForm","props","setUser","user","isUser","console","log","setError","handleSubmit","e","preventDefault","socket","nickname","state","emit","handleChange","setState","target","value","error","this","className","onSubmit","htmlFor","ref","input","textInput","type","onChange","placeholder","Component","SideBarOption","lastMessage","active","onClick","toUpperCase","defaultProps","SideBar","receiver","onSendPrivateMessage","addChatForUser","username","setActiveSideBar","CHATS","newSideBar","activeSideBar","chats","activeChat","setActiveChat","logout","USERS","refs","map","chat","key","get","last","differenceBy","otherUser","title","numberOfUsers","Messages","scrollDown","bind","container","scrollTop","scrollHeight","prepProps","prevState","mes","MessageInput","sendMessage","sendTyping","lastUpdateTime","isTyping","startCheckingTyping","typingInterval","setInterval","stopCheckingTyping","clearInterval","autoComplete","onKeyUp","keyCode","disabled","length","ChatContainer","sendOpenPrivateMessage","resetChat","addChat","reset","newChats","messageEvent","typingEvent","on","updateTypingInChat","addMessageToChat","chatId","push","includes","initSocket","off","values","ChatHeading","Layout","io","reconnect","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.9cf5c70b.chunk.js","sourcesContent":["module.exports = {\r\n  COMMUNITY_CHAT: \"COMMUNITY_CHAT\",\r\n  USER_CONNECTED: \"USER_CONNECTED\",\r\n  MESSAGE_RECEIVED: \"MESSAGE_RECEIVED\",\r\n  MESSAGE_SENT: \"MESSAGE_SENT\",\r\n  USER_DISCONNECTED: \"USER_DISCONNECTED\",\r\n  TYPING: \"TYPING\",\r\n  VERIFY_USER: \"VERIFY_USER\",\r\n  LOGOUT: \"LOGOUT\",\r\n  PRIVATE_MESSAGE: \"PRIVATE_MESSAGE\",\r\n};\r\n","const { v4: uuidv4 } = require(\"uuid\");\r\n\r\nconst createUser = ({ name = \"\", socketId = null } = {}) => ({\r\n  id: uuidv4(),\r\n  name,\r\n  socketId,\r\n});\r\n\r\nconst createMessage = ({ message = \"\", sender = \"\" } = {}) => ({\r\n  id: uuidv4(),\r\n  time: getTime(new Date(Date.now())),\r\n  message,\r\n  sender,\r\n});\r\n\r\nconst createChat = ({\r\n  messages = [],\r\n  name = \"Community\",\r\n  users = [],\r\n  isCommunity = false,\r\n} = {}) => ({\r\n  id: uuidv4(),\r\n  name: isCommunity ? \"Community\" : createChatNameFromUsers(users),\r\n  messages,\r\n  users,\r\n  typingUsers: [],\r\n  isCommunity,\r\n});\r\n\r\nconst createChatNameFromUsers = (users, excludedUser = \"\") => {\r\n  return users.filter((u) => u !== excludedUser).join(\" & \") || \"Empty Users\";\r\n};\r\n\r\nconst getTime = (date) => {\r\n  return `${date.getHours()}:${(\"0\" + date.getMinutes()).slice(-2)}`;\r\n};\r\n\r\nmodule.exports = {\r\n  createMessage,\r\n  createChat,\r\n  createUser,\r\n  createChatNameFromUsers,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { VERIFY_USER } from \"../Events\";\r\n\r\nclass LoginForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      nickname: \"\",\r\n      error: \"\",\r\n    };\r\n  }\r\n\r\n  setUser = ({ user, isUser }) => {\r\n    console.log(user, isUser);\r\n    if (isUser) {\r\n      this.setError(\"Username is already in use\");\r\n    } else {\r\n      this.setError(\"\");\r\n      this.props.setUser(user);\r\n    }\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { socket } = this.props;\r\n    const { nickname } = this.state;\r\n    socket.emit(VERIFY_USER, nickname, this.setUser);\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ nickname: e.target.value });\r\n  };\r\n\r\n  setError = (error) => {\r\n    this.setState({ error });\r\n  };\r\n\r\n  render() {\r\n    const { nickname, error } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <form onSubmit={this.handleSubmit} className=\"login-form\">\r\n          <label htmlFor=\"nickname\">\r\n            <h2>Who are you?</h2>\r\n          </label>\r\n          <input\r\n            ref={(input) => {\r\n              this.textInput = input;\r\n            }}\r\n            type=\"text\"\r\n            id=\"nickname\"\r\n            value={nickname}\r\n            onChange={this.handleChange}\r\n            placeholder={\"DragonSlayer123\"}\r\n          />\r\n          <div className=\"error\">{error ? error : null}</div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class SideBarOption extends Component {\r\n  static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    lastMessage: PropTypes.string,\r\n    active: PropTypes.bool,\r\n    onClick: PropTypes.func,\r\n  };\r\n  static defaultProps = {\r\n    lastMessage: \"\",\r\n    active: false,\r\n    onClick: () => {},\r\n  };\r\n  render() {\r\n    const { name, lastMessage, active, onClick } = this.props;\r\n    return (\r\n      <div className={`user ${active ? \"active\" : \"\"}`} onClick={onClick}>\r\n        <div className=\"user-photo\">{name[0].toUpperCase()}</div>\r\n        <div className=\"user-info\">\r\n          <div className=\"name\">{name}</div>\r\n          {lastMessage && <div className=\"last-message\">{lastMessage}</div>}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { FaSearch, FaChevronDown } from \"react-icons/fa\";\r\nimport { MdEject, MdMenu } from \"react-icons/md\";\r\nimport { SideBarOption } from \"./SideBarOption\";\r\nimport { get, last, differenceBy } from \"lodash\";\r\nimport { createChatNameFromUsers } from \"../../Factories\";\r\n\r\nclass SideBar extends Component {\r\n  static type = {\r\n    CHATS: \"chats\",\r\n    USERS: \"users\",\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      receiver: \"\",\r\n      activeSideBar: SideBar.type.CHATS,\r\n    };\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { receiver } = this.state;\r\n    const { onSendPrivateMessage } = this.props;\r\n\r\n    onSendPrivateMessage(receiver);\r\n    this.setState({ receiver: \"\" });\r\n  };\r\n\r\n  addChatForUser = (username) => {\r\n    this.props.onSendPrivateMessage(username);\r\n    this.setActiveSideBar(SideBar.type.CHATS);\r\n  };\r\n\r\n  setActiveSideBar = (newSideBar) => {\r\n    this.setState({\r\n      activeSideBar: newSideBar,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      chats,\r\n      activeChat,\r\n      user,\r\n      setActiveChat,\r\n      logout,\r\n      users,\r\n    } = this.props;\r\n    const { receiver, activeSideBar } = this.state;\r\n    return (\r\n      <div id=\"side-bar\">\r\n        <div className=\"heading\">\r\n          <div className=\"app-name\">\r\n            Chit Chat <FaChevronDown />\r\n          </div>\r\n          <div className=\"menu\">\r\n            <MdMenu />\r\n          </div>\r\n        </div>\r\n        <form onSubmit={this.handleSubmit} className=\"search\">\r\n          <i className=\"search-icon\">\r\n            <FaSearch />\r\n          </i>\r\n          <input\r\n            placeholder=\"Search\"\r\n            type=\"text\"\r\n            value={receiver}\r\n            onChange={(e) => {\r\n              this.setState({ receiver: e.target.value });\r\n            }}\r\n          />\r\n          <div className=\"plus\"></div>\r\n        </form>\r\n        <div className=\"side-bar-select\">\r\n          <div\r\n            onClick={() => {\r\n              this.setActiveSideBar(SideBar.type.CHATS);\r\n            }}\r\n            className={`side-bar-select__option ${\r\n              activeSideBar === SideBar.type.CHATS ? \"active\" : \"\"\r\n            }`}\r\n          >\r\n            <span>Chats</span>\r\n          </div>\r\n          <div\r\n            onClick={() => {\r\n              this.setActiveSideBar(SideBar.type.USERS);\r\n            }}\r\n            className={`side-bar-select__option ${\r\n              activeSideBar === SideBar.type.USERS ? \"active\" : \"\"\r\n            }`}\r\n          >\r\n            <span>Users</span>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"users\"\r\n          ref=\"users\"\r\n          onClick={(e) => {\r\n            e.target === this.refs.user && setActiveChat(null);\r\n          }}\r\n        >\r\n          {activeSideBar === SideBar.type.CHATS\r\n            ? chats.map((chat) => {\r\n                if (chat.name) {\r\n                  return (\r\n                    <SideBarOption\r\n                      key={chat.id}\r\n                      name={\r\n                        chat.isCommunity\r\n                          ? chat.name\r\n                          : createChatNameFromUsers(chat.users, user.name)\r\n                      }\r\n                      lastMessage={get(last(chat.messages), \"message\", \"\")}\r\n                      active={activeChat.id === chat.id}\r\n                      onClick={() => {\r\n                        this.props.setActiveChat(chat);\r\n                      }}\r\n                    />\r\n                  );\r\n                }\r\n                return null;\r\n              })\r\n            : differenceBy(users, [user], \"name\").map((otherUser) => {\r\n                return (\r\n                  <SideBarOption\r\n                    key={otherUser.id}\r\n                    name={otherUser.name}\r\n                    onClick={() => {\r\n                      this.addChatForUser(otherUser.name);\r\n                    }}\r\n                  />\r\n                );\r\n              })}\r\n        </div>\r\n        <div className=\"current-user\">\r\n          <span>{user.name}</span>\r\n          <div\r\n            onClick={() => {\r\n              logout();\r\n            }}\r\n            title=\"Logout\"\r\n            className=\"logout\"\r\n          >\r\n            <MdEject />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideBar;\r\n","import React from \"react\";\r\nimport { FaVideo, FaUserPlus, FaEllipsisV } from \"react-icons/fa\";\r\n\r\nexport default function ({ name, numberOfUsers }) {\r\n  return (\r\n    <div className=\"chat-header\">\r\n      <div className=\"user-info\">\r\n        <div className=\"user-name\">{name}</div>\r\n        <div className=\"status\">\r\n          <div className=\"indicator\"></div>\r\n          <span>{numberOfUsers ? numberOfUsers : null}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"options\">\r\n        <FaVideo />\r\n        <FaUserPlus />\r\n        <FaEllipsisV />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass Messages extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.scrollDown = this.scrollDown.bind(this);\r\n  }\r\n\r\n  scrollDown() {\r\n    const { container } = this.refs;\r\n    container.scrollTop = container.scrollHeight;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.scrollDown();\r\n  }\r\n\r\n  componentDidUpdate(prepProps, prevState) {\r\n    this.scrollDown();\r\n  }\r\n\r\n  render() {\r\n    const { messages, user, typingUsers } = this.props;\r\n    return (\r\n      <div ref=\"container\" className=\"thread-container\">\r\n        <div className=\"thread\">\r\n          {messages.map((mes) => {\r\n            return (\r\n              <div\r\n                key={mes.id}\r\n                className={`message-container ${\r\n                  mes.sender === user.name && \"right\"\r\n                }`}\r\n              >\r\n                <div className=\"time\">{mes.time}</div>\r\n                <div className=\"data\">\r\n                  <div className=\"message\">{mes.message}</div>\r\n                  <div className=\"name\">{mes.sender}</div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n          {typingUsers.map((name) => {\r\n            return (\r\n              <div key={name} className=\"typing-user\">\r\n                {`${name} is typing . . .`}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Messages;\r\n","import React, { Component } from \"react\";\r\n\r\nclass MessageInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      message: \"\",\r\n      isTyping: false,\r\n    };\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.sendMessage();\r\n    this.setState({ message: \"\" });\r\n  };\r\n\r\n  sendMessage = () => {\r\n    this.props.sendMessage(this.state.message);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.stopCheckingTyping();\r\n  }\r\n\r\n  sendTyping = () => {\r\n    this.lastUpdateTime = Date.now();\r\n    if (!this.state.isTyping) {\r\n      this.setState({ isTyping: true });\r\n      this.props.sendTyping(true);\r\n      this.startCheckingTyping();\r\n    }\r\n  };\r\n\r\n  startCheckingTyping = () => {\r\n    this.typingInterval = setInterval(() => {\r\n      if (Date.now() - this.lastUpdateTime > 500) {\r\n        this.setState({ isTyping: false });\r\n        this.stopCheckingTyping();\r\n      }\r\n    }, 500);\r\n  };\r\n\r\n  stopCheckingTyping = () => {\r\n    if (this.typingInterval) {\r\n      clearInterval(this.typingInterval);\r\n      this.props.sendTyping(false);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { message } = this.state;\r\n    return (\r\n      <div className=\"message-input\">\r\n        <form onSubmit={this.handleSubmit} className=\"message-form\">\r\n          <input\r\n            id=\"message\"\r\n            ref={\"messageinput\"}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={message}\r\n            autoComplete={\"off\"}\r\n            placeholder=\"Say something!\"\r\n            onKeyUp={(e) => {\r\n              e.keyCode !== 13 && this.sendTyping();\r\n            }}\r\n            onChange={({ target }) => {\r\n              this.setState({ message: target.value });\r\n            }}\r\n          />\r\n          <button disabled={message.length < 1} type=\"submit\" className=\"send\">\r\n            Send\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessageInput;\r\n","import React, { Component } from \"react\";\r\nimport SideBar from \"../sidebar/SideBar\";\r\nimport {\r\n  MESSAGE_SENT,\r\n  COMMUNITY_CHAT,\r\n  MESSAGE_RECEIVED,\r\n  TYPING,\r\n  PRIVATE_MESSAGE,\r\n  USER_CONNECTED,\r\n  USER_DISCONNECTED,\r\n} from \"../../Events\";\r\n\r\nimport ChatHeading from \"./ChatHeading\";\r\nimport Messages from \"../messages/Messages\";\r\nimport MessageInput from \"../messages/MessageInput\";\r\nimport { values } from \"lodash\";\r\n\r\nclass ChatContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      chats: [],\r\n      users: [],\r\n      activeChat: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { socket } = this.props;\r\n    this.initSocket(socket);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { socket } = this.props;\r\n    socket.off(PRIVATE_MESSAGE);\r\n    socket.off(USER_CONNECTED);\r\n    socket.off(USER_DISCONNECTED);\r\n  }\r\n\r\n  initSocket(socket) {\r\n    const { user } = this.props;\r\n    socket.emit(COMMUNITY_CHAT, this.resetChat);\r\n    socket.on(PRIVATE_MESSAGE, this.addChat);\r\n    socket.on(\"connect\", () => {\r\n      socket.emit(COMMUNITY_CHAT, this.resetChat);\r\n    });\r\n    socket.on(USER_CONNECTED, (users) => {\r\n      this.setState({\r\n        users: values(users),\r\n      });\r\n    });\r\n    socket.on(USER_DISCONNECTED, (users) => {\r\n      this.setState({\r\n        users: values(users),\r\n      });\r\n    });\r\n  }\r\n\r\n  sendOpenPrivateMessage = (receiver) => {\r\n    const { socket, user } = this.props;\r\n    const { activeChat } = this.state;\r\n    socket.emit(PRIVATE_MESSAGE, { receiver, sender: user.name, activeChat });\r\n  };\r\n\r\n  resetChat = (chat) => {\r\n    return this.addChat(chat, true);\r\n  };\r\n\r\n  addChat = (chat, reset = false) => {\r\n    console.log(chat);\r\n    const { socket } = this.props;\r\n    const { chats } = this.state;\r\n\r\n    const newChats = reset ? [chat] : [...chats, chat];\r\n    this.setState({\r\n      chats: newChats,\r\n      activeChat: reset ? chat : this.state.activeChat,\r\n    });\r\n\r\n    const messageEvent = `${MESSAGE_RECEIVED}-${chat.id}`;\r\n    const typingEvent = `${TYPING}-${chat.id}`;\r\n\r\n    socket.on(typingEvent, this.updateTypingInChat(chat.id));\r\n    socket.on(messageEvent, this.addMessageToChat(chat.id));\r\n  };\r\n\r\n  addMessageToChat = (chatId) => {\r\n    return (message) => {\r\n      const { chats } = this.state;\r\n      let newChats = chats.map((chat) => {\r\n        if (chat.id === chatId) chat.messages.push(message);\r\n        return chat;\r\n      });\r\n\r\n      this.setState({ chats: newChats });\r\n    };\r\n  };\r\n\r\n  updateTypingInChat = (chatId) => {\r\n    return ({ isTyping, user }) => {\r\n      if (user !== this.props.user.name) {\r\n        const { chats } = this.state;\r\n        let newChats = chats.map((chat) => {\r\n          if (chat.id === chatId) {\r\n            if (isTyping && !chat.typingUsers.includes(user)) {\r\n              chat.typingUsers.push(user);\r\n            } else if (!isTyping && chat.typingUsers.includes(user)) {\r\n              chat.typingUsers = chat.typingUsers.filter((u) => u !== user);\r\n            }\r\n          }\r\n          return chat;\r\n        });\r\n        this.setState({ chats: newChats });\r\n      }\r\n    };\r\n  };\r\n\r\n  sendMessage = (chatId, message) => {\r\n    const { socket } = this.props;\r\n    socket.emit(MESSAGE_SENT, { chatId, message });\r\n  };\r\n\r\n  sendTyping = (chatId, isTyping) => {\r\n    const { socket } = this.props;\r\n    socket.emit(TYPING, { chatId, isTyping });\r\n  };\r\n\r\n  setActiveChat = (activeChat) => {\r\n    this.setState({ activeChat });\r\n  };\r\n\r\n  render() {\r\n    const { user, logout } = this.props;\r\n    const { chats, activeChat, users } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <SideBar\r\n          logout={logout}\r\n          chats={chats}\r\n          user={user}\r\n          users={users}\r\n          activeChat={activeChat}\r\n          setActiveChat={this.setActiveChat}\r\n          onSendPrivateMessage={this.sendOpenPrivateMessage}\r\n        />\r\n        <div className=\"chat-room-container\">\r\n          {activeChat !== null ? (\r\n            <div className=\"chat-room\">\r\n              <ChatHeading name={activeChat.name} />\r\n              <Messages\r\n                messages={activeChat.messages}\r\n                user={user}\r\n                typingUsers={activeChat.typingUsers}\r\n              />\r\n              <MessageInput\r\n                sendMessage={(message) => {\r\n                  this.sendMessage(activeChat.id, message);\r\n                }}\r\n                sendTyping={(isTyping) => {\r\n                  this.sendTyping(activeChat.id, isTyping);\r\n                }}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <div className=\"chat-room choose\">\r\n              <h3>Select a chat</h3>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChatContainer;\r\n","import React, { Component } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport { USER_CONNECTED, LOGOUT, VERIFY_USER } from \"../Events\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport ChatContainer from \"./chats/ChatContainer\";\r\n\r\nconst socketUrl = \"/\";\r\n\r\nclass Layout extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      socket: null,\r\n      user: null,\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.initSocket();\r\n  }\r\n\r\n  initSocket = () => {\r\n    const socket = io(socketUrl);\r\n\r\n    socket.on(\"connect\", () => {\r\n      if (this.state.user) {\r\n        this.reconnect(socket);\r\n      } else {\r\n        console.log(\"Connected\");\r\n      }\r\n    });\r\n    this.setState({ socket });\r\n  };\r\n\r\n  reconnect = (socket) => {\r\n    socket.emit(VERIFY_USER, this.state.user.name, ({ isUser, user }) => {\r\n      if (isUser) {\r\n        this.setState({ user: null })\r\n      } else {\r\n        this.setUser(user)\r\n      }\r\n    });\r\n  }\r\n\r\n  setUser = (user) => {\r\n    const { socket } = this.state;\r\n    socket.emit(USER_CONNECTED, user);\r\n    this.setState({ user });\r\n  };\r\n\r\n  logout = () => {\r\n    const { socket } = this.state;\r\n    socket.emit(LOGOUT);\r\n    this.setState({ user: null });\r\n  };\r\n\r\n  render() {\r\n    const { socket, user } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        {!user ? (\r\n          <LoginForm socket={socket} setUser={this.setUser} />\r\n        ) : (\r\n            <ChatContainer socket={socket} user={user} logout={this.logout} />\r\n          )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import React, { Component } from \"react\";\nimport Layout from \"./components/Layout\";\nimport \"./index.css\";\n\nclass App extends Component {\n  render() {\n    return <Layout title=\"Chit-Chat\" />;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}